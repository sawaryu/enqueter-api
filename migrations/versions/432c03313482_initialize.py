"""initialize

Revision ID: 432c03313482
Revises: 
Create Date: 2022-03-08 22:11:24.892449

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '432c03313482'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('token_blocklist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('jti', sa.String(length=36), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=15), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('user', 'admin', name='userrole'), nullable=False),
    sa.Column('reset_digest', sa.String(length=255), nullable=True),
    sa.Column('reset_expired_at', sa.Integer(), nullable=True),
    sa.Column('nickname', sa.String(length=20), nullable=False),
    sa.Column('nickname_replaced', sa.String(length=20), nullable=False),
    sa.Column('introduce', sa.String(length=140), nullable=False),
    sa.Column('avatar', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('confirmation',
    sa.Column('id', sa.String(length=50), nullable=False),
    sa.Column('expire_at', sa.Integer(), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('passive_id', sa.Integer(), nullable=True),
    sa.Column('active_id', sa.Integer(), nullable=True),
    sa.Column('category', sa.Enum('follow', 'answer', name='notificationcategory'), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=True),
    sa.Column('watched', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['active_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['passive_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('point',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('point', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE')
    )
    op.create_table('point_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('total_rank', sa.Integer(), nullable=False),
    sa.Column('total_point', sa.Integer(), nullable=False),
    sa.Column('month_rank', sa.Integer(), nullable=True),
    sa.Column('month_point', sa.Integer(), nullable=True),
    sa.Column('week_rank', sa.Integer(), nullable=True),
    sa.Column('week_point', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('question',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.String(length=140), nullable=False),
    sa.Column('option_first', sa.String(length=15), nullable=False),
    sa.Column('option_second', sa.String(length=15), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('response',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE')
    )
    op.create_table('response_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('total_rank', sa.Integer(), nullable=False),
    sa.Column('total_response', sa.Integer(), nullable=False),
    sa.Column('month_rank', sa.Integer(), nullable=True),
    sa.Column('month_response', sa.Integer(), nullable=True),
    sa.Column('week_rank', sa.Integer(), nullable=True),
    sa.Column('week_response', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_table('search_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['target_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'target_id')
    )
    op.create_table('update_email',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('code', sa.String(length=6), nullable=False),
    sa.Column('expire_at', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_relationship',
    sa.Column('following_id', sa.Integer(), nullable=False),
    sa.Column('followed_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['followed_id'], ['user.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['following_id'], ['user.id'], ondelete='CASCADE'),
    sa.UniqueConstraint('following_id', 'followed_id', name='user_relationship_unique_key')
    )
    op.create_table('answer',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('option', sa.Enum('first', 'second', name='questionoption'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.UniqueConstraint('user_id', 'question_id', name='answer_unique_key')
    )
    op.create_table('bookmark',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('question_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.UniqueConstraint('user_id', 'question_id', name='bookmark_unique_key')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('bookmark')
    op.drop_table('answer')
    op.drop_table('user_relationship')
    op.drop_table('update_email')
    op.drop_table('search_history')
    op.drop_table('response_stats')
    op.drop_table('response')
    op.drop_table('question')
    op.drop_table('point_stats')
    op.drop_table('point')
    op.drop_table('notification')
    op.drop_table('confirmation')
    op.drop_table('user')
    op.drop_table('token_blocklist')
    # ### end Alembic commands ###
